pipeline {
	agent {
		docker {
			image 'maven:3.6.1-jdk-8-slim'
			args '-v $HOME/.m2:/root/.m2'
		}
	}
	stages{
		stage("build") {
			when{
				changeset "**/worker/**"
			}
			steps{
				echo "compiling worker app"
				dir('worker'){
					sh 'mvn compile'
				}
			}
		}
		stage("test"){
			when {
				changeset "**/worker/**"
			}
			steps{
				echo "Running unit test on worker app"
				dir("worker") {
					sh 'mvn clean test'
				} 
			}
		}
		stage("package"){
			when{
				branch "master"
				changeset "**/worker/**"
			}
			steps{
				echo "Packaging worker app"
				dir("worker") {
					sh 'mvn package -DskipTest'
					archiveArtifacts artifacts: '**/target/*.jar', fingerprint: true
				} 
			}
		}
		stage("docker-package") {
			agent any
			steps{
				echo "Packaginf worker app with docker"
				script{
					docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin') {def workerImage = docker.build("ntuschiev/worker:v${env.BUILD_ID}", "./worker") 
					workerImage.push()
					workerImage.push("latest")}
				}
			}
		}
	}
	post{
		always {
			
			echo "Building multibranch pipeline for worker is completed ..."
		}
	}
}
